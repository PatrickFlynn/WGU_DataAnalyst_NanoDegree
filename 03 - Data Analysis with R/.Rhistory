iqr(c(4,4,2,9,7,9,6,4,7,8))
IQR(c(4,4,2,9,7,9,6,4,7,8))
sd(c(156, 184, 172, 165))
mean(c(.56, .23, .11, .05, .03, .02))
(.56*1)+(2*.23)+(.11*3)+(4*.05)+(5*.03)+(6*.02)
u <- (.56*1)+(2*.23)+(.11*3)+(4*.05)+(5*.03)+(6*.02)
u - .56
u - .23
u - .11
u - .05
u - .03
u - .02
.56-u
.23-u
.11-u
.05-u
.05-u
.03-u
(-1.26)^2
(-1.59)^2
(-1.71)^2
test <- data.frame(c(1,6,7), c(23,48,41))
test
corr(test)
cor(test)
test[1]
(sum(test[1])*sum(test[2]))/2
(sum(test[1])*sum(test[2]))
1568/2
test[1]-mean(test[1])
test[1]
mean(test[1])
14/3
test <- c(1,6,7)
mean(test)
meanx <- mean(test)
sdx <- mean(test)
sdx <- sd(test)
test1 <- c(23,48,41)
meany <- mean(test1)
sdy <- sd(test1)
test-mean
test-meanx
(test-meanx)
(test-meanx)/sdx
zx <- (test-meanx)/sdx
zy <- (test-meany)/sdy
sum(zx)*(sum(zy))
sum(zx)*sum(zy)
sum(zx)+sum(zy)
(sum(zx)+sum(zy))/2
corr(test, test1)
cor(test, test1)
1*.56
2*.23
3*.11
4*.05
5*.03
6*.02
.56+.46+.33+.2+.15+.12
u <- .56+.46+.33+.2+.15+.12
.56-u
.46-u
.33-u
.2-u
.15-u
.12-u
2-1.82
3-u
4-1.82
.82^2
.18^2
1.18^2
2.18^2
3.18^2
4.18^2
.6724*56
.6724*.56
.0324*.46
1.3924*.33
4.7524*.05
10.1124*.03
17.472*.02
.376+.015+.459+.237+.3+.35
.376+.015+.459+.237+.3+.35
SQRT(.376+.015+.459+.237+.3+.35)
sqrt(.376+.015+.459+.237+.3+.35)
.17+.22+.09
.31+.19+.02
.09+.02
*.48
.11*.48
.11+.48
.48*.02
.11*.48
/.11
.0528/.11
.11+.48
/.11
.59/.11
sqrt((.23*(1-.23)/312)
)
.23-.024
1.28*.024
.23-.031
.23+.031
8/(sqrt(61))
(8/(sqrt(61)))*1.645
83-(8/(sqrt(61)))*1.645
83+(8/(sqrt(61)))*1.645
(.25*(1.645^2))/(.3^2)
(.25*(1.645^2))
1.645^2
*.25
1.645^2
1.645^2*.25
(1.645^2*.25)/(.03^2)
(1.65^2*.25)/(.03^2)
(1.64^2*.25)/(.03^2)
.17*.22*.09
.17+.22+.09
.17+.22+.09
.48*.11
.48*.02
.48*.11
.02/.52
.02/.52*(.48)
.17+.22+.09+.02
.5/.11
.5/.48
7/9
.778*2.33
535-1.81
535+1.81
2.34*.778
1.82+535
2.32*.778
1.804+535
2.33*.778
+535
2.33*.778
1.812+535
IQR(4, 4, 2, 9, 7, 9, 6, 4, 7, 8)
IQR(c(4, 4, 2, 9, 7, 9, 6, 4, 7, 8))
test <- c(1,6,7)
test1 <- c(23,48,41)
meanx <- mean(test)
meanx <- mean(test1)
sdy <- sd(test1)
sdx <- sd(test)
zx <- (test-meanx)/sdx
(sum(zx)+sum(zy))/2
zy <- (test-meany)/sdy
meanx <- mean(test)
meany <- mean(test1)
zy <- (test-meany)/sdy
(sum(zx)+sum(zy))/2
mean1 <- mean(c(1,6,7))
sd1 <- sd(c(1,6,7))
mean2 <- mean(c(23,48,41))
sd2 <- sd(c(23,48,41))
data <- data.frame(c(1,6,7), c(23,48,41))
data
mean(data)
mean(data[1])
c(1,6,7)-mean()
c(1,6,7)-mean1
(c(1,6,7)-mean1)/sd1)
((c(1,6,7)-mean1)/sd1)
sum(((c(1,6,7)-mean1)/sd1))
sum(((c(1,6,7)-mean1)/sd1))+sum(((c(23,48,41)-mean2)/sd2))
/2
sum(((c(1,6,7)-mean1)/sd1))+sum(((c(23,48,41)-mean2)/sd2))/2
sum(((c(1,6,7)-mean1)/sd1))
(c(1,6,7)-mean1)/sd1)
(c(1,6,7)-mean1)/sd1
c(1,6,7)-mean1)/sd1
(c(1,6,7)-mean1)/sd1
(c(23,48,41)-mean2)/sd2
sum(-1.1406469  ,0.4147807  ,0.7258662, -1.1113671  ,0.8270639  ,0.2843032)
sum(-1.1406469  ,0.4147807  ,0.7258662, -1.1113671  ,0.8270639  ,0.2843032)/2
cor(c(1,6,7), c(23,48,41))
535-1.81
535-1.81
535+1.81
sd(c(156, 184, 172, 165))
A <- matrix( c(5, 1, 0,
3,-1, 2,
4, 0,-1), nrow=3, byrow=TRUE)
library(mathlab)
library(matlib)
install.packages(matlib)
solve(a\)
solve(A)
install.packages"taskscheduleR"
install.packages("taskscheduleR")
taskscheduleR:::taskschedulerAddin()
install.packages("ggplot2", dependencies = T)
install.packages("knitr", dependencies = T)
install.packages("dplyr", dependencies = T)
getwd()
setwd("S:\Code\School\WGU_DataAnalyst_NanoDegree\03 - Data Analysis with R")
setwd("S:\\Code\\School\\WGU_DataAnalyst_NanoDegree\\03 - Data Analysis with R")
getwd()
wine <- read.csv(file="wineQualityReds.csv",header=TRUE, sep=",")
wine
wine
?wine
ggplot(x=x, data=wine)
library(ggplot)
install.packages("ggplot2", dependencies = T)
install.packages("knitr", dependencies = T)
install.packages("dplyr", dependencies = T)
install.packages("knitr", dependencies = T)
library(ggplot)
library(ggplot2)
install.packages("ggplot2", dependencies = T)
install.packages("ggplot2", dependencies = T)
library(ggplot)
library(ggplot2)
ggplot(data=wine, aes(x=x))
ggplot(data=wine, aes(x='x'))
ggplot(data=wine, aes(x=fixed.acidity))
ggplot(data=wine, aes(x=fixed.acidity, y=fixed.acidity))
qplot(x = x, data=wine)
qplot(x = wine.x, data=wine)
qplot(x = fixed.acidity, data=wine)
qplot(x = volatile.acidity, data=wine)
ggplot(data=wine, mapping=aes(x=fixed.acidity))+geom_boxplot()
library(dplyr)
wine %.% group_by(quality) %.% summarise(test = mean(fixed.acidity))
wine %.% group_by(quality) %.% summarise(test = mean(fixed.acidity))
library(dplyr)
wine %.% group_by(quality) %.% summarise(test = mean(fixed.acidity))
wine %.% group_by(quality) | summarise(test = mean(fixed.acidity))
wine | group_by(quality) | summarise(test = mean(fixed.acidity))
wine >> group_by(quality) >> summarise(test = mean(fixed.acidity))
wine %>% group_by(quality %>% summarise(test = mean(fixed.acidity))
wine %>% group_by(quality) %>% summarise(test = mean(fixed.acidity))
wine_acid <- wine %>% group_by(quality) %>% summarise(test = mean(fixed.acidity))
ggplot(data=wine_acid, aes(x=quality, y=test)) + geom_line()
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(dplyr)
library(reshape2)
```{r, echo=FALSE}
install.packages(gridExtra)
install.packages("gridExtra")
install.packages("grid")
install.packages("grid")
install.packages("lattice")
grobs = 'test'
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(dplyr)
library(reshape2)
library(gridExtra)
library(grid)
library(lattice)
ggplot(data=melted_matrix, aes(x=Var1, y=Var2, fill=value)) + geom_tile() + scale_fill_gradient(low="white",mid="grey", high="#891e1e") + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + labs(x="Measurement", y="Measurement", title="Correlation Matrix")
grid.arrange(winequal, corrmatrixg, boxplotg, ncol = 3,top="Top 3 Insightful Visualizations")
# Top 3 Insightful Visualizations and Summary
```{r echo=FALSE}
winequal
corrmatrixg
boxplotg
```
------
## Summary:
Wine quality has several chemical measurements that work together to make what we know and love. While this particular dataset did not have any "smoking guns", it is clear that overall factors such as acidity, sulfur dioxide content, and alcohol content mildy/moderatley impact the quality of wine. Moving forward, a more robust dataset containing samples deemed excellent/terrible would be important to a more thorough and complete analysis (especially if estimation/prediction was a goal).
